# 4-4. 문자열 포맷
print("a" + "b") # 결과: ab 
print("a", "b") # 결과: a b (,를 이용하면 띄어쓰기로 구분되어짐)

# 첫 번째 방법으로는 % 가 있습니다. 
# #따옴표로 둘러싸인 문자열 중간에 %d, %c, %s 등을 넣어두고 
# 문자열 뒤에 % 를 적은 후 어떤 값을 적으면 
# 그 값이 문자열 중간에 있는 %d, %c, %s 위치에 들어가게 되지요.

# 방법 1
#%d 는 정수(decimal)를, %c 는 문자(character)를, %s 는 문자열(string) 을 의미
#단, %s 를 쓰게 되면 정수, 문자, 문자열 상관 없이 모든 값을 집어 넣을 수 있습니다

print("나는 %d살입니다." % 20) # 나는 20살입니다
print("나는 %s을 좋아합니다." % "파이썬") # 나는 파이썬을 좋아합니다.
print("Apple 은 %c로 시작해요." % "A") # Apple 은 A로 시작해요.

print("나는 %s살입니다." % 20) # 나는 20살입니다 (%s 로도 정수값 표현 가능)

#만약에 문자열 내에 2개 이상의 값을 넣으려고 한다면 문자열 이후에 오는 % 뒤의 값들을 괄호로 감싸고 콤마로 구분합니다. 그러면 순서대로 문자열 내의 % 위치에 값이 들어가게 되지요.

print("나는 %s색과 %s색을 좋아해요." % ("파란", "빨간")) # 나는 파란색과 빨간색을 좋아해요.


# 탈출문자 
print("백문이 불여일견\n백견이 불여일타")

# 따옴표 쓰기

print("저는 \"나도코딩\"입니다.") # 저는 "나도코딩"입니다.
print("저는 \'나도코딩\'입니다.") # 저는 '나도코딩'입니다.

# 역슬래시를 두번 쓰면 주석과 같이 표기된다.
print("C:\\Users\\Nadocoding\\Desktop\\PythonWorkspace>") # C:\Users\Nadocoding\Desktop\PythonWorkspace>

# 문자열을 있는 그대로 출력하고 싶을 때 문자열 앞에 r 을 넣는 방법도 있다. 
# 그러면 문자열 내에서 어떤 값이 포함되어 있던지 개의치 않고 그대로 출력한다. 탈출문자가 포함되어 있어도 말이다!

print(r"C:\Users\Nadocoding\Desktop\PythonWorkspace>") # raw string

#\b 는 키보드의 백스페이스와 같은 역할. 앞글자 하나를 삭제해준다.
print("Redd\bApple") # RedApple

#\t 는 키보드의 tab과 같이 보통 8칸단위를 띄워준다.
 
print("Red\tApple") # Red     Apple
